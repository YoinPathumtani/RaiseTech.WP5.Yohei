@charset 'utf-8';
/* 
再利用できるパターンとして、小さな単位のモジュールを定義。
※marginなど余白は定義しない。あくまでパーツとして扱う
*/

.c-button {
  color: $color-C;
  background-color: $color-A;
  &-register {
    border-radius: 3px;
    width: 294px;
    height: 72px;
    line-height: 72px;
    color: $color-C;
    background-color: $color-A;
    font-size: 1rem;
    font-weight: bold;
    display: inline-block;
    @include mq(sp) {
      width: 231px;
      height: 45px;
      font-size: 0.9rem;
      line-height: 45px;
    }
  }
}

.c-button-logo {
  width: 160px;
  margin: 20px;
  @include mq(pc) {
    width: 143px;
    margin-left: 11px;
  }
}

/* ハンバーガー */
$btnWidth: 24px;
$btnHeight: 2px;

.p-hamburger {
  width: 45px;
  height: 45px;
  background-color: $color-E;
  position: relative;
  display: none;
  border: none;
  @include mq(pc) {
    display: block;
  }
  &::before,
  &::after {
    content: "";
    width: $btnWidth;
    height: $btnHeight;
    background-color: $color-A;
    position: absolute;
    left: calc(50% - (#{$btnWidth} / 2));
    display: block;
    transition: transform 0.2s;
  }
  &::before {
    top: 12px;
  }
  &::after {
    top: 32px;
  }
  > span {
    width: $btnWidth;
    height: $btnHeight;
    font-size: 0;
    background-color: $color-A;
    background-size: auto $btnHeight;
    position: absolute;
    left: calc(50% - (#{$btnWidth} / 2));
    top: 50%;
    transition: transform 0.2s;
  }
  &.is-open {
    &::before {
      transform: rotate(45deg);
      top: 21px;
    }
    &::after {
      transform: rotate(-45deg);
      top: 21px;
    }
    > span {
      background: 0;
    }
  }
}
body.is-open {
  position: fixed;
}
